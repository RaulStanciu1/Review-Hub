openapi: 3.0.3
info:
  description: Review_Hub API
  title: Review_Hub API
  version: 1.0.0
servers:
- url: https://Review_Hub
paths:
  /project/addComment:
    put:
      operationId: addComment
      parameters:
      - explode: true
        in: query
        name: ProjectName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filePath
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: lineNum
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Comment
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: CommentType
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: version
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: PUT project/addComment
      x-accepts: '*/*'
  /project/alternativeFunction:
    put:
      operationId: alternative
      parameters:
      - explode: true
        in: query
        name: ProjectName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filePath
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: funcStart
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: funcEnd
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: version
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: PUT project/alternativeFunction
      x-accepts: '*/*'
  /project/createFile:
    post:
      operationId: createFile
      parameters:
      - explode: true
        in: query
        name: ProjectName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filePath
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: file
        required: true
        schema:
          format: binary
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: POST project/createFile
      x-accepts: '*/*'
  /project/createFolder:
    post:
      operationId: createFolder
      parameters:
      - explode: true
        in: query
        name: ProjectName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filePath
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: POST project/createFolder
      x-accepts: '*/*'
  /project/createProject:
    post:
      operationId: createProject
      parameters:
      - explode: true
        in: query
        name: Name
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: File
        required: true
        schema:
          format: binary
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
      summary: POST project/createProject
      x-accepts: '*/*'
  /project/deleteFile:
    delete:
      operationId: deleteFile
      parameters:
      - explode: true
        in: query
        name: ProjectName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filePath
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: DELETE project/deleteFile
      x-accepts: '*/*'
  /project/deleteFolder:
    delete:
      operationId: deleteFolder
      parameters:
      - explode: true
        in: query
        name: ProjectName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filePath
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: DELETE project/deleteFolder
      x-accepts: '*/*'
  /project/deleteProject:
    delete:
      operationId: deleteProject
      parameters:
      - explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: DELETE project/deleteProject
      x-accepts: '*/*'
  /project/updateFile:
    put:
      operationId: updateFile
      parameters:
      - explode: true
        in: query
        name: ProjectName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filePath
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: file
        required: true
        schema:
          format: binary
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: PUT project/updateFile
      x-accepts: '*/*'
  /project/updateProject:
    put:
      operationId: updateProject
      parameters:
      - explode: true
        in: query
        name: ProjectName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: file
        required: true
        schema:
          format: binary
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: PUT project/updateProject
      x-accepts: '*/*'
  /user/checkAccount:
    get:
      operationId: checkAccount
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: GET user/checkAccount
      x-accepts: '*/*'
  /user/login:
    get:
      operationId: login
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: password
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: GET user/login
      x-accepts: '*/*'
  /user/register:
    post:
      operationId: register
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: password
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: POST user/register
      x-accepts: '*/*'
  /user/upgrade:
    put:
      operationId: upgrade
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: PUT user/upgrade
      x-accepts: '*/*'
  /team/acceptTeamRequest:
    post:
      operationId: acceptTeamRequest
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: teamName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: projectName
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: POST team/acceptTeamRequest
      x-accepts: '*/*'
  /team/addAdmin:
    post:
      operationId: addAdmin
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: teamName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: AuthorizatorUsername
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: POST team/addAdmin
      x-accepts: '*/*'
  /team/addProject:
    put:
      operationId: addProject
      parameters:
      - explode: true
        in: query
        name: teamName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: projectName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: File
        required: true
        schema:
          format: binary
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: PUT team/addProject
      x-accepts: '*/*'
  /team/create:
    post:
      operationId: createTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamDto'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: POST team/create
      x-content-type: application/json
      x-accepts: '*/*'
  /team/getAllRequests:
    get:
      operationId: getAllRequests
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Request'
          description: OK
      summary: GET team/getAllRequests
      x-accepts: '*/*'
  /team/rejectTeamRequest:
    post:
      operationId: rejectTeamRequest
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: teamName
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: POST team/rejectTeamRequest
      x-accepts: '*/*'
  /team/removeAdmin:
    post:
      operationId: removeAdmin
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: teamName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: AuthorizatorUsername
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: POST team/removeAdmin
      x-accepts: '*/*'
  /team/requestTeamAccess:
    put:
      operationId: requestTeamAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: PUT team/requestTeamAccess
      x-content-type: application/json
      x-accepts: '*/*'
components:
  schemas:
    ObjectId:
      example:
        timestamp: 0
      properties:
        timestamp:
          format: int32
          type: integer
      type: object
    FileSystemEntity:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    Project:
      example:
        children:
          name: name
        name: name
        id:
          timestamp: 0
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        children:
          $ref: '#/components/schemas/FileSystemEntity'
        name:
          type: string
      type: object
    TeamDto:
      example:
        name: name
        user: user
      properties:
        name:
          type: string
        user:
          type: string
      type: object
    Request:
      example:
        teamName: teamName
        id:
          timestamp: 0
        message: message
        username: username
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        username:
          type: string
        teamName:
          type: string
        message:
          type: string
      type: object

